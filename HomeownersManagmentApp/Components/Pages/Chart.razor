@page "/chart"
@using Telerik.Blazor.Components
@using Telerik.Blazor

<TelerikStockChart Height="450px"
                   Width="750px"
                   DateField="@nameof(StockDataPoint.Date)"
                   @ref="seriesItems">

    <StockChartCategoryAxes>
        <StockChartCategoryAxis BaseUnit="@ChartCategoryAxisBaseUnit.Days">
            <StockChartCategoryAxisCrosshair Visible="true">
                <StockChartCategoryAxisCrosshairTooltip Visible="true" />
            </StockChartCategoryAxisCrosshair>
        </StockChartCategoryAxis>
    </StockChartCategoryAxes>

    <StockChartValueAxes>
        <StockChartValueAxis>
            <StockChartValueAxisCrosshair Visible="true">
                <StockChartValueAxisCrosshairTooltip Visible="true" />
            </StockChartValueAxisCrosshair>
        </StockChartValueAxis>
    </StockChartValueAxes>

    <StockChartSeriesItems>
        <!-- Свічковий графік -->
        <StockChartSeries 
            Type="StockChartSeriesType.Candlestick"
            Color="Green"
            DownColor="Red"
            Name="Product 1"
            Data="@ChartProduct1Data"
            OpenField="@nameof(StockDataPoint.Opena)"
            CloseField="@nameof(StockDataPoint.Close)"
            HighField="@nameof(StockDataPoint.High)"
            LowField="@nameof(StockDataPoint.Low)">
            <StockChartSettings></StockChartSettings>
        </StockChartSeries>

        <!-- Лінійний графік поверх свічкового -->
        <StockChartSeries Type="StockChartSeriesType.Line"
                          Name="Trend Line"
                          Color="Blue"
                          Data="@ChartProduct1Data"
                          Field="@(nameof(StockDataPoint.Close))"
                          CategoryField="@(nameof(StockDataPoint.Date))">
        </StockChartSeries>
    </StockChartSeriesItems>

</TelerikStockChart>

<h1> hi</h1>

@code {
    List<StockDataPoint> ChartProduct1Data { get; set; }
    TelerikStockChart seriesItems { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GenerateChartData();
    }

    async Task GenerateChartData()
    {
        ChartProduct1Data = new List<StockDataPoint>()
        {
            new StockDataPoint(new DateTime(2019, 1, 1), 98.5, 99.25, 101.80, 97.30, 150),
            new StockDataPoint(new DateTime(2019, 1, 2), 101.20, 102.75, 104.30, 100.10, 180),
            new StockDataPoint(new DateTime(2019, 1, 3), 103.80, 105.40, 107.25, 102.60, 459),
            new StockDataPoint(new DateTime(2019, 1, 4), 106.50, 108.20, 109.75, 105.30, 987),
            new StockDataPoint(new DateTime(2019, 1, 5), 108.90, 107.60, 110.40, 106.80, 699),
            new StockDataPoint(new DateTime(2019, 1, 6), 107.30, 109.80, 111.90, 106.50, 349),
            new StockDataPoint(new DateTime(2019, 1, 7), 110.60, 112.40, 114.20, 109.10, 781),
            new StockDataPoint(new DateTime(2019, 1, 8), 112.80, 111.20, 115.30, 110.40, 108),
            new StockDataPoint(new DateTime(2019, 1, 9), 111.50, 113.90, 116.40, 110.20, 940),
            new StockDataPoint(new DateTime(2019, 1, 10), 114.70, 116.80, 118.90, 113.40, 514),
            new StockDataPoint(new DateTime(2019, 1, 13), 117.20, 115.60, 119.80, 114.90, 717),
            new StockDataPoint(new DateTime(2019, 1, 14), 115.80, 118.40, 120.60, 114.30, 194),
            new StockDataPoint(new DateTime(2019, 1, 15), 119.50, 121.20, 123.80, 117.90, 95)
        };

        await Task.FromResult(ChartProduct1Data);
    }

    public class StockDataPoint
    {
        public StockDataPoint() { }

        public StockDataPoint(DateTime date, double open, double close, double high, double low, int volume)
        {
            Date = date;
            Opena = open;
            Close = close;
            High = high;
            Low = low;
            Volume = volume;
        }
        public DateTime Date { get; set; }

        public double Opena { get; set; }
        public double Close { get; set; }
        public double High { get; set; }
        public double Low { get; set; }
        public int Volume { get; set; }
    }
}